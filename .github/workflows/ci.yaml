name: Workflow frontend

on:
  push:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies
        run: npm install

      - name: Run tests
        run: npm test

      - name: Upload coverage report
        if: success() && always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage/

  lint:
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies
        run: npm install

      - name: Run lint
        run: npm run lint

  security-check:
    runs-on: ubuntu-latest
    needs: lint

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies
        run: npm install

      - name: Run security audit
        run: npm audit --audit-level=high

  deploy-ui:
    needs: security-check
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
          IMAGE_NAME: karinlesnik/frontend-mag
          TAG: latest
        run: |
          docker buildx build --platform linux/amd64,linux/arm64 -t $IMAGE_NAME:$TAG --push .

      - name: Install and configure the Koyeb CLI
        uses: koyeb-community/install-koyeb-cli@v2
        with:
          api_token: "${{ secrets.KOYEB_API_TOKEN_UI }}"
          github_token: "${{ secrets.GITHUB_TOKEN }}"

      - name: Deploy to Koyeb
        run: koyeb service redeploy spare-leandra-university-of-maribor/frontend-mag
        env:
          application_id: ${{ secrets.KOYEB_APPLICATION_ID_UI }}
          api_token: ${{ secrets.KOYEB_API_TOKEN_UI }}

  notify:
    needs: deploy-ui
    if: failure()
    runs-on: ubuntu-latest
    steps:
      - name: Send failure email notification via MailerLite
        run: |
          # Define email content
          SUBJECT="GitHub Actions Job Failed"
          BODY="The GitHub Actions job has failed. For details, check the actions logs."

          # Send email using MailerLite API
          curl -X POST https://api.mailerlite.com/api/v2/email/send \
            -H "Content-Type: application/json" \
            -H "X-MailerLite-ApiKey: ${{ secrets.MAILERLITE_API_KEY }}" \
            -d '{
              "from": {
                "email": "karin.lesnik@student.um.si",
                "name": "GitHub Actions"
              },
              "to": [
                {
                  "email": "karin.lesnik@student.um.si",
                  "name": "Karin Poprijan"
                }
              ],
              "subject": "'$SUBJECT'",
              "body": "'$BODY'",
              "type": "text"
            }'